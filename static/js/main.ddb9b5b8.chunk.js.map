{"version":3,"sources":["Components/Checkbox/index.js","Components/GlobalFilter/index.js","Components/Table/index.js","Pages/Home/index.js","Pages/Users/index.js","App.js","reportWebVitals.js","index.js"],"names":["Checkbox","React","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","type","GlobalFilter","globalFilter","setGlobalFilter","useState","value","setValue","onChange","useAsyncDebounce","undefined","className","e","target","placeholder","Table","columns","data","useTable","initialState","pageSize","selectedRowIds","useGlobalFilter","usePagination","useRowSelect","hooks","visibleColumns","push","id","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","prepareRow","state","pageIndex","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","i","getRowProps","cells","cell","getCellProps","length","onClick","disabled","Home","setdata","axios","get","then","response","catch","error","console","log","useMemo","accessor","to","original","filter","item","Users","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"yUAEaA,EAAWC,IAAMC,YAC1B,WAA6BC,GAAS,IAAnCC,EAAkC,EAAlCA,cAAkBC,EAAgB,iBAC7BC,EAAaL,IAAMM,SACnBC,EAAcL,GAAOG,EAM3B,OAJAL,IAAMQ,WAAU,WACdD,EAAYE,QAAQN,cAAgBA,IACnC,CAACI,EAAaJ,IAGf,mCACE,mCAAOO,KAAK,WAAWR,IAAKK,GAAiBH,SCaxCO,G,MAtBM,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,gBAElC,EAA0Bb,IAAMc,SAASF,GAAzC,mBAAOG,EAAP,KAAcC,EAAd,KACMC,EAAWC,4BAAiB,SAAAH,GAC9BF,EAAgBE,QAASI,KAC1B,KAEH,OACI,sBAAKC,UAAU,aAAf,oBACY,IACR,uBACIL,MAAOA,GAAS,GAChBE,SAAU,SAAAI,GACVL,EAASK,EAAEC,OAAOP,OAClBE,EAASI,EAAEC,OAAOP,QAElBQ,YAAY,gBCyEbC,EAtFD,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACtB,EAaMC,mBAAS,CACXF,UACAC,OACAE,aAAc,CACVC,SAAU,EACVC,eAAgB,CAAC,GAAK,EAAM,GAAK,EAAM,GAAK,KAGjDC,kBACAC,gBACAC,gBACA,SAAAC,GACCA,EAAMC,eAAeC,MAAK,SAAAX,GAAO,OAC/B,CACEY,GAAI,YACJC,OAAQ,gBAAGC,EAAH,EAAGA,8BAAH,OACN,8BACE,cAACxC,EAAD,eAAcwC,SAGlBC,KAAM,gBAAGC,EAAH,EAAGA,IAAH,OACJ,8BACE,cAAC1C,EAAD,eAAc0C,EAAIC,mCAVO,mBAc5BjB,UAtCLkB,EADJ,EACIA,cACAC,EAFJ,EAEIA,kBACAC,EAHJ,EAGIA,aACAC,EAJJ,EAIIA,KACAC,EALJ,EAKIA,SACAC,EANJ,EAMIA,aACAC,EAPJ,EAOIA,YACAC,EARJ,EAQIA,gBACAC,EATJ,EASIA,YACAtC,EAVJ,EAUIA,gBACAuC,EAXJ,EAWIA,WAXJ,IAYIC,MAASC,EAZb,EAYaA,UAAW1C,EAZxB,EAYwBA,aAgCxB,OACI,qCACE,cAAC,EAAD,CAAcA,aAAcA,EAAcC,gBAAiBA,IACzD,kDAAW8B,KAAX,cACI,gCACKE,EAAaU,KAAI,SAAAC,GAAW,OAC7B,8CAAQA,EAAYC,uBAApB,aACKD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC/B,8CAAQA,EAAOC,kBAAf,aACKD,EAAOE,OAAO,wBAM3B,iDAAWjB,KAAX,aACSE,EAAKS,KAAI,SAACd,EAAKqB,GAEhB,OADAV,EAAWX,GAEP,8CAAQA,EAAIsB,eAAZ,aACCtB,EAAIuB,MAAMT,KAAI,SAAAU,GACX,OAAO,8CAAQA,EAAKC,gBAAb,aAA8BD,EAAKJ,OAAO,2BAOrE,sBAAKzC,UAAU,UAAf,UACI,0CAAa,IACT,mCACKkC,EAAY,EADjB,OACwBH,EAAYgB,UAC1B,OAEd,wBAAQC,QAAS,kBAAMpB,KAAgBqB,UAAWnB,EAAlD,SAAoE,MACpE,wBAAQkB,QAAS,kBAAMrB,KAAYsB,UAAWpB,EAA9C,SAA4D,aCf7DqB,EAnEF,WACT,MAAwBxD,mBAAS,IAAjC,mBAAOY,EAAP,KAAa6C,EAAb,KAEA/D,qBAAU,WACNgE,IAAMC,IAAI,8CACTC,MAAK,SAAAC,GACFJ,EAAQI,EAASjD,SAEpBkD,OAAM,SAAAC,GACHC,QAAQC,IAAIF,QAEjB,IAEH,IAIMpD,EAAUuD,mBACZ,iBAAM,CACN,CACI1C,OAAQ,KACR2C,SAAU,MAEd,CACI3C,OAAQ,eACRE,KAAM,gBAAEC,EAAF,EAAEA,IAAF,OAAW,cAAC,IAAD,CAAMyC,GAAE,iBAAYzC,EAAI0C,SAAS9C,IAAjC,4BAErB,CACIC,OAAQ,WACR2C,SAAU,YAEd,CACI3C,OAAQ,QACR2C,SAAU,SAEd,CACI3C,OAAQ,OACR2C,SAAU,gBAEd,CACI3C,OAAQ,QACR2C,SAAU,SAEd,CACI3C,OAAQ,eACR2C,SAAU,gBAGd,CACI3C,OAAQ,UACR2C,SAAU,WAEd,CACI3C,OAAQ,SACRE,KAAM,gBAAEC,EAAF,EAAEA,IAAF,OAAW,wBAAQrB,UAAU,aAAagD,QAAS,kBAzC9C/B,EAyC8DI,EAAI0C,SAAS9C,QAxC1FkC,EAAQ7C,EAAK0D,QAAO,SAAAC,GAAI,OAAIA,EAAKhD,KAAOA,MAD1B,IAACA,GAyCM,oBAGrB,CAACX,IAGL,OACI,8BACI,cAAC,EAAD,CAAOD,QAASA,EAASC,KAAMA,OCzD5B4D,EARD,WACV,OACI,yCCYOC,MAZf,WAEE,OACE,cAAC,IAAD,CAAeC,SAAUC,mBAAzB,SACE,gCACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtB,IACjC,cAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,aAAaC,UAAWN,UCEnCO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASxC,OACP,cAAC,IAAMyC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.ddb9b5b8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Checkbox = React.forwardRef(\r\n    ({ indeterminate, ...rest }, ref) => {\r\n      const defaultRef = React.useRef()\r\n      const resolvedRef = ref || defaultRef\r\n  \r\n      React.useEffect(() => {\r\n        resolvedRef.current.indeterminate = indeterminate\r\n      }, [resolvedRef, indeterminate])\r\n  \r\n      return (\r\n        <>\r\n          <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n        </>\r\n      )\r\n    }\r\n  )","import React from 'react';\r\nimport { useAsyncDebounce } from \"react-table\";\r\nimport './index.css'\r\n\r\nconst GlobalFilter = ({ globalFilter, setGlobalFilter}) => {\r\n\r\n    const [value, setValue] = React.useState(globalFilter)\r\n    const onChange = useAsyncDebounce(value => {\r\n        setGlobalFilter(value || undefined)\r\n    }, 200)\r\n\r\n    return (\r\n        <div className='search-div'>\r\n            Search:{' '}\r\n            <input\r\n                value={value || \"\"}\r\n                onChange={e => {\r\n                setValue(e.target.value);\r\n                onChange(e.target.value);\r\n                }}\r\n                placeholder='Search'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GlobalFilter\r\n","import React from 'react';\r\nimport { useTable, usePagination, useRowSelect, useGlobalFilter } from \"react-table\";\r\nimport './index.css';\r\nimport { Checkbox } from '../Checkbox/index.js';\r\nimport GlobalFilter from '../GlobalFilter';\r\n\r\n\r\nconst Table = ({ columns, data }) => {\r\n    const {\r\n        getTableProps, \r\n        getTableBodyProps, \r\n        headerGroups, \r\n        page, \r\n        nextPage,\r\n        previousPage,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        pageOptions,\r\n        setGlobalFilter,\r\n        prepareRow, \r\n        state: { pageIndex, globalFilter },\r\n      } = useTable({\r\n        columns,\r\n        data,\r\n        initialState: { \r\n            pageSize: 5, \r\n            selectedRowIds: {'1': true, '3': true, '6': true}, \r\n        }\r\n      },\r\n       useGlobalFilter,\r\n       usePagination,\r\n       useRowSelect,\r\n       hooks => {\r\n        hooks.visibleColumns.push(columns => [\r\n          {\r\n            id: 'selection',\r\n            Header: ({ getToggleAllRowsSelectedProps }) => (\r\n              <div>\r\n                <Checkbox {...getToggleAllRowsSelectedProps()} />\r\n              </div>\r\n            ),\r\n            Cell: ({ row }) => (\r\n              <div>\r\n                <Checkbox {...row.getToggleRowSelectedProps()} />\r\n              </div>\r\n            ),\r\n          },\r\n          ...columns,\r\n        ])\r\n      } \r\n    ); \r\n\r\n    return (\r\n        <>\r\n          <GlobalFilter globalFilter={globalFilter} setGlobalFilter={setGlobalFilter}/>\r\n            <table {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                        <th {...column.getHeaderProps()}>\r\n                            {column.render(\"Header\")}\r\n                        </th>\r\n                        ))}\r\n                    </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                        {page.map((row, i) => {\r\n                        prepareRow(row);\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\r\n                            })}\r\n                            </tr>\r\n                        );\r\n                        })}\r\n                </tbody>\r\n            </table>\r\n            <div className='buttons'>\r\n                <span> Page {' '}  \r\n                    <strong>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </strong>{' '}\r\n                </span>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>{'<'}</button>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>{'>'}</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React, { useMemo, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport Table from '../../Components/Table'\r\n\r\nconst Home = () => {\r\n    const [data, setdata] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => {\r\n            setdata(response.data)\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n    }, [])\r\n\r\n    const deleteRow = (id) => {\r\n        setdata(data.filter(item => item.id !== id))\r\n    }\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n        {\r\n            Header: \"id\",\r\n            accessor: \"id\"\r\n        },\r\n        {\r\n            Header: \"More details\",\r\n            Cell: ({row}) => <Link to={`/users/${row.original.id}`}>More Details</Link>\r\n        },\r\n        {\r\n            Header: \"Username\",\r\n            accessor: \"username\"\r\n        },\r\n        {\r\n            Header: \"Email\",\r\n            accessor: \"email\"\r\n        },\r\n        {\r\n            Header: \"City\",\r\n            accessor: \"address.city\"\r\n        },\r\n        {\r\n            Header: \"Phone\",\r\n            accessor: \"phone\"\r\n        },\r\n        {\r\n            Header: \"Company Name\",\r\n            accessor: \"company.name\"\r\n        },\r\n        \r\n        {\r\n            Header: \"Website\",\r\n            accessor: \"website\"\r\n        },\r\n        {\r\n            Header: \"Delete\",\r\n            Cell: ({row}) => <button className='delete-btn' onClick={() => deleteRow(row.original.id)}>x</button>\r\n        },\r\n        ],\r\n        [data]\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Table columns={columns} data={data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst Users = () => {\r\n    return (\r\n        <div>\r\n          Hello\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users\r\n","import { BrowserRouter, Route } from 'react-router-dom';\nimport Home from './Pages/Home';\nimport Users from './Pages/Users';\n\nfunction App() {\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div>\n        <Route exact path='/' component={Home}/>\n        <Route exact path='/users/:id' component={Users}/>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}